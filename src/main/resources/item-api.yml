openapi: "3.0.2"
info:
  title: item staorage management
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
paths:
  /items:
    get:
      summary: List all items
      operationId: getItems
      parameters:
        - name: limit
          schema:
            type: integer
            maximum: 100
          in: query
      responses:
        '200':
          description: the requestes items
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create an item
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: successfully created the item
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: the item identifier, as itemId 
        schema:
          type: string
    get:
      summary: Info for a specific item
      operationId: getItemById
      responses:
        '200':
          description: the item for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: the given id does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: 'delete the given item'
      operationId: deleteItemById
      responses:
        '204':
          description: deletion successfull
        '404':
          description: the given id does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string